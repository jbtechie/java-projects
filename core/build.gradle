apply plugin: 'groovy'

compileJava {
  sourceCompatibility = 1.7
  targetCompatibility = 1.7
}

dependencies {

  compile 'org.codehaus.groovy:groovy-all:2.2.1'
  compile 'com.google.inject:guice:3.0'
  compile 'com.google.inject.extensions:guice-grapher:3.0'
  compile 'com.google.guava:guava:16.0.1'
  compile 'com.netflix.rxjava:rxjava-groovy:0.15.1'
  compile 'com.yammer.metrics:metrics-core:2.2.0'
  compile 'com.fasterxml.jackson.core:jackson-core:2.1.4'
  compile 'com.fasterxml.jackson.core:jackson-databind:2.1.4'
  compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.1.4'
  compile 'org.apache.commons:commons-lang3:3.3.1'
  compile 'joda-time:joda-time:2.2'

  testCompile 'junit:junit:4.10'
  testCompile 'org.mockito:mockito-core:1.9.5'
}

task buildMetadata << {
//  if(isDirtyGitDir) {
//    throw new GradleException('The git working directory has modifications.')
//  }
  final String generatedResources = "${buildDir}/generated-resources"
  file("${generatedResources}/com/compuality").with {
    mkdirs()
    file(new File(it, 'build-metadata.yml')).withPrintWriter {
      it.println("version:${version}" as String)
      it.println("date:${now}" as String)
      it.println("revision:${gitInfo}" as String)
      it.println("cleanGitDir:${isCleanGitDir}" as String)
    }
  }
  sourceSets.main.resources.srcDir generatedResources
}

jar.dependsOn buildMetadata
